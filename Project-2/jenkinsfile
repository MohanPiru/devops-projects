pipeline{
    agent any
    environment {
        PATH = "$PATH:/usr/share/maven/bin"
    }
    stages{
       stage('GetCode'){
            steps{
                git url:"https://github.com/MohanPiru/devops-projects.git" , branch: "master"
                sh 'cd Project-2/'
                sh 'ls'
            }
         }        
       stage('Build'){
            steps{
                dir('Project-2'){
                sh 'mvn clean package'
                }
            }
         }
          stage("Building"){
            steps{
            echo "Building the image using docker"
            dir('Project-2') {
            sh "docker build -t hello-war . "
            }
            }
        }
     stage("Push"){
            steps {
            echo "Pushing the code to docker hub"
            dir('Project-2') {
            withCredentials([usernamePassword(credentialsId: "Piru02" , passwordVariable: "P" , usernameVariable: "U")])
            {sh "docker tag hello-war ${env.U}/hello-war:latest"
            sh "docker login -u ${env.U} -p ${env.P}"
            sh "docker push ${env.U}/hello-war:latest"
            }
            }
            
            }
        }


        stage('SonarQube analysis') {
     //  def scannerHome = tool 'sonar-scanner';
     
        steps{
        withSonarQubeEnv('sonarqube-9.4') { 
        // If you have configured more than one global server connection, you can specify its name
    //    sh "${scannerHome}/bin/sonar-scanner"
       // sh "mvn sonar:sonar"
       sh "${mvn}/bin/mvn clean verify sonar:sonar -Dsonar.projectKey=demo-project"
        }
        }
        }


     stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "devops-projects"
            GIT_USER_NAME = "MohanPiru"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "pirumohan2002@gmail.com"
                    git config user.name "Pirumohan Mandal"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" Project-2/k8s-manifests/deployment.yml
                    git add Project-2/k8s-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                '''
            }
            }
            }

       
    }
}
