pipeline{
    agent any
    environment {
        PATH = "$PATH:/usr/share/maven/bin"
    }
    stages{
       stage('GetCode'){
            steps{
                git url:"https://github.com/MohanPiru/devops-projects.git" , branch: "master"
                sh 'cd Project-2/ && ls'
                }
                }     

//

     stage('maven Build'){
            steps{
                dir('Project-2'){
                sh 'mvn clean package'
                }
                }
                }

//

        stage('Static Code Analysis') {
      environment {
        SONAR_URL = "<http://34.201.116.83:9000>"
           //change it according to yours
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd Project-2/ && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
        }
        }

//

     stage("Build and Push"){
            steps {
            echo "building the image and Pushing the code to docker hub"
            dir('Project-2') {
            withCredentials([usernamePassword(credentialsId: "Piru02" , passwordVariable: "P" , usernameVariable: "U")])
        {    sh "docker build -t ${env.U}/realtime-cicd:${BUILD_NUMBER} . "
             sh "docker login -u ${env.U} -p ${env.P}"
             sh "docker push ${env.U}/realtime-cicd:${BUILD_NUMBER}"
            }
            }
            }
            }

// after this you can run the docker image(create container) and see your application.


     stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "devops-projects"
            GIT_USER_NAME = "MohanPiru"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "abc2233@gmail.com"
                    git config user.name "Pirumohan Mandal"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" Project-2/k8s-manifests/deployment.yml
                    git add Project-2/k8s-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                '''
            }
            }
            }

       
    }
}
